% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeTree.R
\name{makeTree}
\alias{makeTree}
\title{Make tree of possible question combinations}
\usage{
makeTree(cat, flat = FALSE)
}
\arguments{
\item{cat}{an object of class \code{Cat}}

\item{flat}{a logical; TRUE returns tree as a table; FALSE returns tree as a list}
}
\value{
An object of class \code{list}
}
\description{
Creates a tree of possible questions asked and stores it as a list of lists (flat = FALSE) or a table of values (flat = TRUE).
}
\details{
Function takes a \code{Cat} object and generate a tree of all possible question combinations, condtional on previous answers and current \eqn{\theta} estimates.
The tree is stored as a list of lists, iteratively generated by filling in a possible answer, calculating the next question via \code{selectItem}, filling in a possible answer for that question, and so forth.
The length of the tree is dictated by the \code{lengthThreshold} slot within the \code{Cat} object.
}
\examples{
 ## binary (ltm)

 # Creates a Cat object
 data("npi")
 ltm_data <- npi[1:100, ]
 ltm_cat <- ltmCat(ltm_data, quadraturePoints = 100)
 
 # Limits tree length to 5 questions
 ltm_cat@lengthThreshold <- 5
 
 # Generates tree as a list
 makeTree(ltm_cat)
 
 # Generates tree as a table
 makeTree(ltm_cat, flat = TRUE)

## binary (tpm)

 data("AMTknowledge")
 tpm_data <- AMTknowledge[1:100, ]
 tpm_cat <- tpmCat(tpm_data, quadraturePoints = 100)
 tpm_cat@lengthThreshold <- 5
 
 makeTree(tpm_cat)
 
 makeTree(tpm_cat, flat = TRUE)

## categorical (grm) 

 data("nfc")
 poly_data <- nfc[1:100, ]
 poly_cat <- grmCat(poly_data, quadraturePoints = 100)
 poly_cat@lengthThreshold <- 3
 
 makeTree(poly_cat)
 
 makeTree(poly_cat, flat = TRUE)

}
\author{
Ryden W. Butler: \email{r.butler@wustl.edu} and Jacob M. Montgomery: \email{jacob.montgomery@wustl.edu}
}
\seealso{
\code{\link{selectItem}} for specific item selection and selection methods
}

